{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { useStyles } from './styles';\nexport const Sorting = () => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    gamesDataReducer: {\n      options,\n      options: {\n        ordering\n      }\n    }\n  } = useSelector(state => state);\n  const styles = useStyles();\n  useEffect(() => {\n    if (value) {\n      const optionsQueryString = getQueryString(options);\n      const queryString = `${router.pathname}?${optionsQueryString}`;\n      router.push(queryString);\n    }\n  }, [ordering]);\n\n  const handleChangeValue = ({\n    target: {\n      value\n    }\n  }) => {\n    setValue(value);\n    dispatch(changeOptions(_objectSpread(_objectSpread({}, options), {}, {\n      ordering: value\n    })));\n    dispatch(clearGamesData());\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      className: styles.title,\n      children: \"Sort By: \"\n    }), /*#__PURE__*/_jsxs(\"select\", {\n      className: styles.field,\n      value: value,\n      onChange: handleChangeValue,\n      children: [/*#__PURE__*/_jsx(\"option\", {\n        className: styles.item,\n        value: \"none\",\n        children: \"reset\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        className: styles.item,\n        value: \"rating\",\n        children: \"rating asc\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        className: styles.item,\n        value: \"-rating\",\n        children: \"rating desc\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        className: styles.item,\n        value: \"released\",\n        children: \"released asc\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        className: styles.item,\n        value: \"-released\",\n        children: \"released desc\"\n      })]\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}