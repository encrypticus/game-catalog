{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\Filtering\\\\Filtering.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nexport const Filtering = ({\n  platforms\n}) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    gamesDataReducer: {\n      options,\n      options: {\n        ordering\n      }\n    }\n  } = useSelector(state => state);\n  useEffect(() => {\n    console.log(platforms);\n  }, []);\n\n  const handleChangeValue = ({\n    target: {\n      value\n    }\n  }) => {\n    setValue(value);\n  };\n\n  const renderSelect = platforms => platforms.map(({\n    id,\n    name\n  }) => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: id,\n    children: name\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"filtering\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"filtering__text\",\n      children: \"Filter By: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"filtering__select\",\n      value: value,\n      onChange: handleChangeValue,\n      children: renderSelect(platforms)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\nFiltering.propTypes = {\n  platforms: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/Filtering/Filtering.jsx"],"names":["React","useEffect","useState","PropTypes","useRouter","changeOptions","clearGamesData","getQueryString","Filtering","platforms","value","setValue","dispatch","useDispatch","router","gamesDataReducer","options","ordering","useSelector","state","console","log","handleChangeValue","target","renderSelect","map","id","name","propTypes","array","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,yCAA9C;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC1C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA,gBAAgB,EAAE;AAAEC,MAAAA,OAAF;AAAWA,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AAApB;AAApB,MAA2DC,WAAW,CAACC,KAAK,IAAIA,KAAV,CAA5E;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMa,iBAAiB,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEb,MAAAA;AAAF;AAAV,GAAD,KAA2B;AACnDC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMc,YAAY,GAAIf,SAAD,IACnBA,SAAS,CAACgB,GAAV,CAAc,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,kBACZ;AAAiB,IAAA,KAAK,EAAED,EAAxB;AAAA,cACGC;AADH,KAAaD,EAAb;AAAA;AAAA;AAAA;AAAA,UADF,CADF;;AAQA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,KAAK,EAAEhB,KAFT;AAGE,MAAA,QAAQ,EAAEY,iBAHZ;AAAA,gBAKGE,YAAY,CAACf,SAAD;AALf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCM;AAoCPD,SAAS,CAACoB,SAAV,GAAsB;AACpBnB,EAAAA,SAAS,EAAEN,SAAS,CAAC0B,KAAV,CAAgBC;AADP,CAAtB","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\n\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\n\nexport const Filtering = ({ platforms }) => {\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { gamesDataReducer: { options, options: { ordering } } } = useSelector(state => state);\n\n  useEffect(() => {\n    console.log(platforms);\n  }, []);\n\n  const handleChangeValue = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const renderSelect = (platforms) => (\n    platforms.map(({ id, name }) => (\n      <option key={id} value={id}>\n        {name}\n      </option>\n    ))\n  );\n\n  return (\n    <form className=\"filtering\">\n      <span className=\"filtering__text\">Filter By: </span>\n      <select\n        className=\"filtering__select\"\n        value={value}\n        onChange={handleChangeValue}\n      >\n        {renderSelect(platforms)}\n      </select>\n    </form>\n  );\n};\n\nFiltering.propTypes = {\n  platforms: PropTypes.array.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}