{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\GameList\\\\GameList.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MetroSpinner } from 'react-spinners-kit';\nimport { add, changeOptions } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { GameListItem } from './GameListItem';\nimport { useStyles } from './styles';\nexport var GameList = function GameList(_ref) {\n  _s();\n\n  var gamesData = _ref.gamesData;\n  var styles = useStyles();\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      _useSelector$gamesDat = _useSelector.gamesDataReducer,\n      results = _useSelector$gamesDat.gamesData.results,\n      options = _useSelector$gamesDat.options;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var startLoading = function startLoading() {\n    return setLoading(true);\n  };\n\n  var stopLoading = function stopLoading() {\n    return setLoading(false);\n  };\n\n  useEffect(function () {\n    if (gamesData) {\n      if (gamesData.error) {\n        console.log(gamesData.error);\n      } else {\n        dispatch(add(gamesData.gamesData));\n      }\n    }\n  }, [gamesData]);\n  useEffect(function () {\n    dispatch(changeOptions(gamesData.options));\n  }, []);\n  useEffect(function () {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    return function () {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n    };\n  }, []);\n\n  var handleScroll = function handleScroll() {\n    var lastItemLoaded = document.querySelector('.game-list > .game-list__item:last-child');\n\n    if (lastItemLoaded) {\n      var lastItemLoadedOffset = lastItemLoaded.offsetTop + lastItemLoaded.clientHeight;\n      var pageOffset = window.pageYOffset + window.innerHeight;\n\n      if (pageOffset > lastItemLoadedOffset && !loading) {\n        if (gamesData.page < gamesData.maxPage) {\n          var nextPage = parseInt(gamesData.page, 10) + 1;\n          var optionsQueryString = getQueryString(options);\n          var queryString = \"\".concat(router.pathname, \"?page=\").concat(nextPage).concat(optionsQueryString);\n          router.push(queryString, queryString, {\n            scroll: false\n          });\n        }\n      }\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      return window.removeEventListener('scroll', handleScroll);\n    };\n  });\n\n  var renderGameList = function renderGameList(gamesList) {\n    return gamesList.map(function (gameListItem) {\n      return /*#__PURE__*/_jsxDEV(GameListItem, {\n        gameInfo: gameListItem\n      }, gameListItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, _this);\n    });\n  };\n\n  var renderSpinner = function renderSpinner() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-container\",\n      children: /*#__PURE__*/_jsxDEV(MetroSpinner, {\n        color: \"#83838A\",\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"\".concat(styles.root, \" game-list\"),\n      children: results.length ? renderGameList(results) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.noResults,\n        children: \"No Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 53\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this), loading && renderSpinner()]\n  }, void 0, true);\n};\n\n_s(GameList, \"h7DIb0bExeCdUTTw8uOhRZpaLQY=\", false, function () {\n  return [useStyles, useRouter, useDispatch, useSelector];\n});\n\n_c = GameList;\nGameList.propTypes = {\n  gamesData: PropTypes.object.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GameList\");","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/GameList/GameList.jsx"],"names":["React","useEffect","useState","Router","useRouter","PropTypes","useSelector","useDispatch","MetroSpinner","add","changeOptions","getQueryString","GameListItem","useStyles","GameList","gamesData","styles","router","dispatch","state","gamesDataReducer","results","options","loading","setLoading","startLoading","stopLoading","error","console","log","events","on","off","handleScroll","lastItemLoaded","document","querySelector","lastItemLoadedOffset","offsetTop","clientHeight","pageOffset","window","pageYOffset","innerHeight","page","maxPage","nextPage","parseInt","optionsQueryString","queryString","pathname","push","scroll","addEventListener","removeEventListener","renderGameList","gamesList","map","gameListItem","id","renderSpinner","root","length","noResults","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,GAAT,EAAcC,aAAd,QAAmC,yCAAnC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmB;AAAA;;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACzC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,MAAMI,MAAM,GAAGb,SAAS,EAAxB;AACA,MAAMc,QAAQ,GAAGX,WAAW,EAA5B;;AAHyC,qBAIyBD,WAAW,CAAC,UAACa,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAD,CAJpC;AAAA,2CAIjCC,gBAJiC;AAAA,MAIAC,OAJA,yBAIbN,SAJa,CAIAM,OAJA;AAAA,MAIWC,OAJX,yBAIWA,OAJX;;AAAA,kBAKXpB,QAAQ,CAAC,KAAD,CALG;AAAA,MAKlCqB,OALkC;AAAA,MAKzBC,UALyB;;AAMzC,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,GAArB;;AACA,MAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMF,UAAU,CAAC,KAAD,CAAhB;AAAA,GAApB;;AAEAvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,SAAJ,EAAe;AACb,UAAIA,SAAS,CAACY,KAAd,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYd,SAAS,CAACY,KAAtB;AACD,OAFD,MAEO;AACLT,QAAAA,QAAQ,CAACT,GAAG,CAACM,SAAS,CAACA,SAAX,CAAJ,CAAR;AACD;AACF;AACF,GARQ,EAQN,CAACA,SAAD,CARM,CAAT;AAUAd,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,QAAQ,CAACR,aAAa,CAACK,SAAS,CAACO,OAAX,CAAd,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIArB,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,MAAM,CAAC2B,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCN,YAArC;AACAtB,IAAAA,MAAM,CAAC2B,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCL,WAAxC;AACA,WAAO,YAAM;AACXvB,MAAAA,MAAM,CAAC2B,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCP,YAAtC;AACAtB,MAAAA,MAAM,CAAC2B,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCN,WAAzC;AACD,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,0CAAvB,CAAvB;;AAEA,QAAIF,cAAJ,EAAoB;AAClB,UAAMG,oBAAoB,GAAGH,cAAc,CAACI,SAAf,GAA2BJ,cAAc,CAACK,YAAvE;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACE,WAA/C;;AAEA,UAAIH,UAAU,GAAGH,oBAAb,IAAqC,CAACd,OAA1C,EAAmD;AACjD,YAAIR,SAAS,CAAC6B,IAAV,GAAiB7B,SAAS,CAAC8B,OAA/B,EAAwC;AACtC,cAAMC,QAAQ,GAAGC,QAAQ,CAAChC,SAAS,CAAC6B,IAAX,EAAiB,EAAjB,CAAR,GAA+B,CAAhD;AACA,cAAMI,kBAAkB,GAAGrC,cAAc,CAACW,OAAD,CAAzC;AACA,cAAM2B,WAAW,aAAMhC,MAAM,CAACiC,QAAb,mBAA8BJ,QAA9B,SAAyCE,kBAAzC,CAAjB;AAEA/B,UAAAA,MAAM,CAACkC,IAAP,CAAYF,WAAZ,EAAyBA,WAAzB,EAAsC;AAAEG,YAAAA,MAAM,EAAE;AAAV,WAAtC;AACD;AACF;AACF;AACF,GAjBD;;AAmBAnD,EAAAA,SAAS,CAAC,YAAM;AACdwC,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCpB,YAAlC;AACA,WAAO;AAAA,aAAMQ,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCrB,YAArC,CAAN;AAAA,KAAP;AACD,GAHQ,CAAT;;AAKA,MAAMsB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD;AAAA,WACrBA,SAAS,CAACC,GAAV,CAAc,UAACC,YAAD;AAAA,0BACZ,QAAC,YAAD;AAEE,QAAA,QAAQ,EAAEA;AAFZ,SACOA,YAAY,CAACC,EADpB;AAAA;AAAA;AAAA;AAAA,eADY;AAAA,KAAd,CADqB;AAAA,GAAvB;;AASA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,wBACpB;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,SAApB;AAA8B,QAAA,IAAI,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADoB;AAAA,GAAtB;;AAMA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,YAAK5C,MAAM,CAAC6C,IAAZ,eAAb;AAAA,gBACGxC,OAAO,CAACyC,MAAR,GAAiBP,cAAc,CAAClC,OAAD,CAA/B,gBAA2C;AAAI,QAAA,SAAS,EAAEL,MAAM,CAAC+C,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD9C;AAAA;AAAA;AAAA;AAAA,aADF,EAIGxC,OAAO,IAAIqC,aAAa,EAJ3B;AAAA,kBADF;AAQD,CA/EM;;GAAM9C,Q;UACID,S,EACAT,S,EACEG,W,EACiDD,W;;;KAJvDQ,Q;AAiFbA,QAAQ,CAACkD,SAAT,GAAqB;AACnBjD,EAAAA,SAAS,EAAEV,SAAS,CAAC4D,MAAV,CAAiBC;AADT,CAArB","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\n\nimport Router, { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MetroSpinner } from 'react-spinners-kit';\n\nimport { add, changeOptions } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { GameListItem } from './GameListItem';\nimport { useStyles } from './styles';\n\nexport const GameList = ({ gamesData }) => {\n  const styles = useStyles();\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { gamesDataReducer: { gamesData: { results }, options } } = useSelector((state) => state);\n  const [loading, setLoading] = useState(false);\n  const startLoading = () => setLoading(true);\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    if (gamesData) {\n      if (gamesData.error) {\n        console.log(gamesData.error);\n      } else {\n        dispatch(add(gamesData.gamesData));\n      }\n    }\n  }, [gamesData]);\n\n  useEffect(() => {\n    dispatch(changeOptions(gamesData.options));\n  }, []);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    const lastItemLoaded = document.querySelector('.game-list > .game-list__item:last-child');\n\n    if (lastItemLoaded) {\n      const lastItemLoadedOffset = lastItemLoaded.offsetTop + lastItemLoaded.clientHeight;\n      const pageOffset = window.pageYOffset + window.innerHeight;\n\n      if (pageOffset > lastItemLoadedOffset && !loading) {\n        if (gamesData.page < gamesData.maxPage) {\n          const nextPage = parseInt(gamesData.page, 10) + 1;\n          const optionsQueryString = getQueryString(options);\n          const queryString = `${router.pathname}?page=${nextPage}${optionsQueryString}`;\n\n          router.push(queryString, queryString, { scroll: false });\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  });\n\n  const renderGameList = (gamesList) => (\n    gamesList.map((gameListItem) => (\n      <GameListItem\n        key={gameListItem.id}\n        gameInfo={gameListItem}\n      />\n    ))\n  );\n\n  const renderSpinner = () => (\n    <div className=\"spinner-container\">\n      <MetroSpinner color=\"#83838A\" size={60} />\n    </div>\n  );\n\n  return (\n    <>\n      <ul className={`${styles.root} game-list`}>\n        {results.length ? renderGameList(results) : <li className={styles.noResults}>No Results</li>}\n      </ul>\n      {loading && renderSpinner()}\n    </>\n  );\n};\n\nGameList.propTypes = {\n  gamesData: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}