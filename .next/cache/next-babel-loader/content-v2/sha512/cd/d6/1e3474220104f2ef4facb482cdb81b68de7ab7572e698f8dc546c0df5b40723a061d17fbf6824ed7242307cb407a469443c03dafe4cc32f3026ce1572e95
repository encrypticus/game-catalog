{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\Sorting\\\\Sorting.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nexport const Sorting = () => {\n  const {\n    0: releasedValue,\n    1: setReleasedValue\n  } = useState('');\n  const {\n    0: ratingValue,\n    1: setRatingValue\n  } = useState('');\n  const dispatch = useDispatch();\n  const {\n    gamesDataReducer: {\n      options,\n      options: {\n        ordering\n      }\n    }\n  } = useSelector(state => state);\n  useEffect(() => {\n    const orderBy = Object.values(ordering).filter(el => el).join(',');\n\n    if (orderBy) {\n      const settings = _objectSpread(_objectSpread({}, options), {}, {\n        ordering: orderBy\n      });\n\n      const optionsQueryString = getQueryString(settings);\n      console.log(optionsQueryString);\n    }\n  }, [ordering]);\n\n  const changeReleasedValue = ({\n    target: {\n      value\n    }\n  }) => {\n    setReleasedValue(value);\n    dispatch(changeOptions(_objectSpread(_objectSpread({}, options), {}, {\n      ordering: _objectSpread(_objectSpread({}, ordering), {}, {\n        released: value\n      })\n    })));\n    dispatch(clearGamesData());\n    const sortBy = Object.values(ordering).join(','); //console.log(ordering);\n  };\n\n  const changeRatingValue = ({\n    target: {\n      value\n    }\n  }) => {\n    setRatingValue(value);\n    dispatch(changeOptions(_objectSpread(_objectSpread({}, options), {}, {\n      ordering: _objectSpread(_objectSpread({}, ordering), {}, {\n        rating: value\n      })\n    })));\n    dispatch(clearGamesData());\n    const sortBy = Object.values(ordering).join(','); //console.log(ordering);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"sorting\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sorting__text\",\n      children: \"Sort By: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"sorting__select\",\n      value: ratingValue,\n      onChange: changeRatingValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"rating\",\n        children: \"rating desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"-rating\",\n        children: \"rating asc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"sorting__select\",\n      value: releasedValue,\n      onChange: changeReleasedValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"released\",\n        children: \"released desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"-released\",\n        children: \"released asc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/Sorting/Sorting.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","changeOptions","clearGamesData","getQueryString","Sorting","releasedValue","setReleasedValue","ratingValue","setRatingValue","dispatch","gamesDataReducer","options","ordering","state","orderBy","Object","values","filter","el","join","settings","optionsQueryString","console","log","changeReleasedValue","target","value","released","sortBy","changeRatingValue","rating"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\n\nexport const Sorting = () => {\n  const [releasedValue, setReleasedValue] = useState('');\n  const [ratingValue, setRatingValue] = useState('');\n  const dispatch = useDispatch();\n  const { gamesDataReducer: { options, options: { ordering } } } = useSelector(state => state);\n\n  useEffect(() => {\n    const orderBy = Object.values(ordering).filter(el => el).join(',');\n    if (orderBy) {\n      const settings = { ...options, ordering: orderBy };\n      const optionsQueryString = getQueryString(settings);\n      console.log(optionsQueryString);\n    }\n  }, [ordering]);\n\n  const changeReleasedValue = ({ target: { value } }) => {\n    setReleasedValue(value);\n\n    dispatch(changeOptions({\n      ...options,\n      ordering: {\n        ...ordering,\n        released: value,\n      }\n    }));\n\n    dispatch(clearGamesData());\n\n    const sortBy = Object.values(ordering).join(',');\n    //console.log(ordering);\n  };\n\n  const changeRatingValue = ({ target: { value } }) => {\n    setRatingValue(value);\n\n    dispatch(changeOptions({\n      ...options,\n      ordering: {\n        ...ordering,\n        rating: value,\n      }\n    }));\n\n    dispatch(clearGamesData());\n\n    const sortBy = Object.values(ordering).join(',');\n    //console.log(ordering);\n  };\n\n  return (\n    <form className=\"sorting\">\n      <span className=\"sorting__text\">Sort By: </span>\n      <select\n        className=\"sorting__select\"\n        value={ratingValue}\n        onChange={changeRatingValue}\n      >\n        <option value=\"rating\">\n          rating desc\n        </option>\n        <option value=\"-rating\">\n          rating asc\n        </option>\n      </select>\n\n      <select\n        className=\"sorting__select\"\n        value={releasedValue}\n        onChange={changeReleasedValue}\n      >\n        <option value=\"released\">\n          released desc\n        </option>\n        <option value=\"-released\">\n          released asc\n        </option>\n      </select>\n    </form>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}