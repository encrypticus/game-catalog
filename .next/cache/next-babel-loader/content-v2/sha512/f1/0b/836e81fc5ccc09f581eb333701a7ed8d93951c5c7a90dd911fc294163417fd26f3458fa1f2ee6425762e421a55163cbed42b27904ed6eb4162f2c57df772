{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MyProjects/game-catalog/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\Filtering\\\\Filtering.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport { changeOptions, clearGamesData, resetFilter } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { useStyles } from './styles';\nexport var Filtering = function Filtering(_ref) {\n  _s();\n\n  var platforms = _ref.platforms;\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      _useSelector$gamesDat = _useSelector.gamesDataReducer,\n      options = _useSelector$gamesDat.options,\n      optionsPlatforms = _useSelector$gamesDat.options.platforms;\n\n  var styles = useStyles();\n  useEffect(function () {\n    if (value) {\n      var optionsQueryString = getQueryString(options);\n      var queryString = \"\".concat(router.pathname, \"?\").concat(optionsQueryString);\n      router.push(queryString);\n    }\n  }, [optionsPlatforms]);\n\n  var handleChangeValue = function handleChangeValue(_ref2) {\n    var value = _ref2.target.value;\n    setValue(value);\n\n    if (value === 'none') {\n      dispatch(resetFilter());\n    } else {\n      dispatch(changeOptions(_objectSpread(_objectSpread({}, options), {}, {\n        platforms: value\n      })));\n    }\n\n    dispatch(clearGamesData());\n  };\n\n  var renderSelect = function renderSelect(platforms) {\n    return platforms.map(function (_ref3) {\n      var id = _ref3.id,\n          name = _ref3.name;\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: id,\n        children: name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.text,\n      children: \"Filter By: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"filtering__select\",\n      value: value,\n      onChange: handleChangeValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), renderSelect(platforms)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Filtering, \"rnhrCxzSv4qQbwAztySJa6LZCb0=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useStyles];\n});\n\n_c = Filtering;\nFiltering.propTypes = {\n  platforms: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Filtering\");","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/Filtering/Filtering.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","useRouter","changeOptions","clearGamesData","resetFilter","getQueryString","useStyles","Filtering","platforms","value","setValue","dispatch","router","state","gamesDataReducer","options","optionsPlatforms","styles","optionsQueryString","queryString","pathname","push","handleChangeValue","target","renderSelect","map","id","name","root","text","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\n\nimport { changeOptions, clearGamesData, resetFilter } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { useStyles } from './styles';\n\nexport const Filtering = ({ platforms }) => {\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { gamesDataReducer: { options, options: { platforms: optionsPlatforms } } } = useSelector(state => state);\n  const styles = useStyles();\n\n  useEffect(() => {\n    if (value) {\n      const optionsQueryString = getQueryString(options);\n      const queryString = `${router.pathname}?${optionsQueryString}`;\n      router.push(queryString);\n    }\n  }, [optionsPlatforms]);\n\n  const handleChangeValue = ({ target: { value } }) => {\n    setValue(value);\n    if (value === 'none') {\n      dispatch(resetFilter());\n    } else {\n      dispatch(changeOptions({ ...options, platforms: value }));\n    }\n    dispatch(clearGamesData());\n  };\n\n  const renderSelect = (platforms) => (\n    platforms.map(({ id, name }) => (\n      <option key={id} value={id}>\n        {name}\n      </option>\n    ))\n  );\n\n  return (\n    <form className={styles.root}>\n      <span className={styles.text}>Filter By: </span>\n      <select\n        className=\"filtering__select\"\n        value={value}\n        onChange={handleChangeValue}\n      >\n        <option value=\"none\">\n          reset\n        </option>\n        {renderSelect(platforms)}\n      </select>\n    </form>\n  );\n};\n\nFiltering.propTypes = {\n  platforms: PropTypes.array.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}