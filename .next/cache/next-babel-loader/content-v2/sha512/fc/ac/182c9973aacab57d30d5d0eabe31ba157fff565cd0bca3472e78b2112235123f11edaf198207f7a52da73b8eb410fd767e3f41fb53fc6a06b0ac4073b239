{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { MetroSpinner } from 'react-spinners-kit';\nimport { PageHead } from '../../components/Head';\nimport { Header } from '../../components/Header';\nimport { Slider } from '../../components/Slider';\nimport { useStyles } from '../../styles/styles';\nimport { rawgConnector } from '../../utils/rawg-connector';\nexport default function Game({\n  game,\n  screenshots\n}) {\n  const {\n    name,\n    description,\n    website\n  } = game;\n  const descrRef = useRef(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const startLoading = () => setLoading(true);\n\n  const stopLoading = () => setLoading(false);\n\n  const styles = useStyles();\n  const router = useRouter();\n  useEffect(() => {\n    const descrBlock = descrRef.current;\n    descrBlock && (descrBlock.innerHTML = description);\n  }, []);\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n    };\n  }, []);\n\n  const renderSpinner = () => /*#__PURE__*/_jsx(\"div\", {\n    className: \"spinner-container\",\n    children: /*#__PURE__*/_jsx(MetroSpinner, {\n      color: \"#83838A\",\n      size: 60\n    })\n  });\n\n  const renderLink = () => /*#__PURE__*/_jsx(\"a\", {\n    className: styles.gameLink,\n    href: website,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    children: website\n  });\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsx(PageHead, {\n      title: name\n    }), /*#__PURE__*/_jsx(Header, {\n      page: \"game\"\n    }), /*#__PURE__*/_jsx(\"main\", {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.nameWrapper,\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            type: \"button\",\n            className: styles.btnBack,\n            onClick: () => router.back(),\n            children: \"Back\"\n          }), /*#__PURE__*/_jsx(\"h1\", {\n            className: styles.gameName,\n            children: name\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.sliderWrapper,\n          children: [/*#__PURE__*/_jsx(Slider, {\n            urls: screenshots,\n            alt: name\n          }), loading && renderSpinner()]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.linkWrapper,\n          children: [\"homepage:\", ' ', website ? renderLink() : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.linkCap,\n            children: \"Unknown\"\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.description,\n          ref: descrRef\n        })]\n      })\n    })]\n  });\n}\nexport async function getServerSideProps({\n  query\n}) {\n  const {\n    slug,\n    screenshots\n  } = query;\n  let game;\n\n  try {\n    game = await rawgConnector.getGameData(slug);\n  } catch ({\n    message\n  }) {\n    game = {\n      error: {\n        message\n      }\n    };\n  }\n\n  return {\n    props: {\n      game,\n      screenshots: JSON.parse(screenshots)\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}