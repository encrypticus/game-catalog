{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\Search\\\\Search.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { useStyles } from './styles';\nexport const Search = () => {\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    gamesDataReducer: {\n      options,\n      options: {\n        search\n      }\n    }\n  } = useSelector(state => state);\n  const styles = useStyles();\n\n  const handleChangeQuery = ({\n    target: {\n      value\n    }\n  }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const optionsQueryString = getQueryString(options);\n    const queryString = `${router.pathname}?${optionsQueryString}`;\n    router.push(queryString);\n    dispatch(clearGamesData());\n  };\n\n  useEffect(() => {\n    dispatch(changeOptions({\n      search: query.trim()\n    }));\n  }, [query]); // useEffect(() => {\n  //   if (query) {\n  //     const optionsQueryString = getQueryString(options);\n  //     const queryString = `${router.pathname}?${optionsQueryString}`;\n  //     router.push(queryString);\n  //   }\n  // }, [search]);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.root,\n      value: query,\n      onChange: handleChangeQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/Search/Search.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","useRouter","changeOptions","clearGamesData","getQueryString","useStyles","Search","query","setQuery","dispatch","router","gamesDataReducer","options","search","state","styles","handleChangeQuery","target","value","handleSubmit","event","preventDefault","optionsQueryString","queryString","pathname","push","trim","root"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,yCAA9C;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA,gBAAgB,EAAE;AAAEC,MAAAA,OAAF;AAAWA,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AAApB;AAApB,MAAyDd,WAAW,CAACe,KAAK,IAAIA,KAAV,CAA1E;AACA,QAAMC,MAAM,GAAGV,SAAS,EAAxB;;AAEA,QAAMW,iBAAiB,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV,GAAD,KAA2B;AACnDV,IAAAA,QAAQ,CAACU,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACE,UAAMC,kBAAkB,GAAGlB,cAAc,CAACQ,OAAD,CAAzC;AACA,UAAMW,WAAW,GAAI,GAAEb,MAAM,CAACc,QAAS,IAAGF,kBAAmB,EAA7D;AACAZ,IAAAA,MAAM,CAACe,IAAP,CAAYF,WAAZ;AACAd,IAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AACH,GAND;;AAQAP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACP,aAAa,CAAC;AAAEW,MAAAA,MAAM,EAAEN,KAAK,CAACmB,IAAN;AAAV,KAAD,CAAd,CAAR;AACD,GAFQ,EAEN,CAACnB,KAAD,CAFM,CAAT,CAnB0B,CAuB1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAAA,2BACE;AACE,MAAA,SAAS,EAAEJ,MAAM,CAACY,IADpB;AAEE,MAAA,KAAK,EAAEpB,KAFT;AAGE,MAAA,QAAQ,EAAES;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxCM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\n\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { useStyles } from './styles';\n\nexport const Search = () => {\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { gamesDataReducer: { options, options: { search } } } = useSelector(state => state);\n  const styles = useStyles();\n\n  const handleChangeQuery = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n      const optionsQueryString = getQueryString(options);\n      const queryString = `${router.pathname}?${optionsQueryString}`;\n      router.push(queryString);\n      dispatch(clearGamesData());\n  };\n\n  useEffect(() => {\n    dispatch(changeOptions({ search: query.trim() }));\n  }, [query]);\n\n  // useEffect(() => {\n  //   if (query) {\n  //     const optionsQueryString = getQueryString(options);\n  //     const queryString = `${router.pathname}?${optionsQueryString}`;\n  //     router.push(queryString);\n  //   }\n  // }, [search]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className={styles.root}\n        value={query}\n        onChange={handleChangeQuery}\n      />\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}