{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\pages\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport { Filtering } from '../components/Filtering';\nimport { GameList } from '../components/GameList';\nimport { PageHead } from '../components/Head';\nimport { Header } from '../components/Header';\nimport { Sorting } from '../components/Sorting';\nexport default function Home({\n  gamesData\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(PageHead, {\n      title: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(Sorting, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Filtering, {\n            platforms: gamesData.platforms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), gamesData.results.length ? /*#__PURE__*/_jsxDEV(GameList, {\n          gamesData: gamesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\nHome.propTypes = {\n  gamesData: PropTypes.object.isRequired\n};\nexport async function getServerSideProps({\n  query\n}) {\n  const {\n    page = 1\n  } = query;\n  let gamesData = null;\n\n  try {\n    const response = await fetch(`${process.env.URL}/api/games`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(_objectSpread(_objectSpread({}, query), {}, {\n        page\n      }))\n    });\n    gamesData = await response.json();\n  } catch ({\n    message\n  }) {\n    gamesData = {\n      error: {\n        message\n      }\n    };\n  }\n\n  return {\n    props: {\n      gamesData\n    }\n  };\n}","map":{"version":3,"sources":["D:/MyProjects/game-catalog/pages/index.js"],"names":["PropTypes","Filtering","GameList","PageHead","Header","Sorting","Home","gamesData","platforms","results","length","propTypes","object","isRequired","getServerSideProps","query","page","response","fetch","process","env","URL","method","headers","body","JSON","stringify","json","message","error","props"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA6B;AAC1C,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAS,UAAA,SAAS,EAAC,SAAnB;AAAA,kCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAEA,SAAS,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKGD,SAAS,CAACE,OAAV,CAAkBC,MAAlB,gBAA2B,QAAC,QAAD;AAAU,UAAA,SAAS,EAAEH;AAArB;AAAA;AAAA;AAAA;AAAA,gBAA3B,gBAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALnE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;AAEDD,IAAI,CAACK,SAAL,GAAiB;AACfJ,EAAAA,SAAS,EAAEP,SAAS,CAACY,MAAV,CAAiBC;AADb,CAAjB;AAIA,OAAO,eAAeC,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA6C;AAClD,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAeD,KAArB;AACA,MAAIR,SAAS,GAAG,IAAhB;;AACA,MAAI;AACF,UAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,GAAI,YAApB,EAAiC;AAC3DC,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkD;AAK3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,iCAAoBX,KAApB;AAA2BC,QAAAA;AAA3B;AALqD,KAAjC,CAA5B;AAOAT,IAAAA,SAAS,GAAG,MAAMU,QAAQ,CAACU,IAAT,EAAlB;AACD,GATD,CASE,OAAO;AAAEC,IAAAA;AAAF,GAAP,EAAoB;AACpBrB,IAAAA,SAAS,GAAG;AAAEsB,MAAAA,KAAK,EAAE;AAAED,QAAAA;AAAF;AAAT,KAAZ;AACD;;AACD,SAAO;AAAEE,IAAAA,KAAK,EAAE;AAAEvB,MAAAA;AAAF;AAAT,GAAP;AACD","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { Filtering } from '../components/Filtering';\nimport { GameList } from '../components/GameList';\nimport { PageHead } from '../components/Head';\nimport { Header } from '../components/Header';\nimport { Sorting } from '../components/Sorting';\n\nexport default function Home({ gamesData }) {\n  return (\n    <div className=\"page-container\">\n      <PageHead title=\"Home\" />\n      <Header />\n      <main>\n        <div className=\"container\">\n          <section className=\"filters\">\n            <Sorting />\n            <Filtering platforms={gamesData.platforms} />\n          </section>\n          {gamesData.results.length ? <GameList gamesData={gamesData} /> : <div>No results</div>}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  gamesData: PropTypes.object.isRequired,\n};\n\nexport async function getServerSideProps({ query }) {\n  const { page = 1 } = query;\n  let gamesData = null;\n  try {\n    const response = await fetch(`${process.env.URL}/api/games`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ ...query, page }),\n    });\n    gamesData = await response.json();\n  } catch ({ message }) {\n    gamesData = { error: { message } };\n  }\n  return { props: { gamesData } };\n}\n"]},"metadata":{},"sourceType":"module"}