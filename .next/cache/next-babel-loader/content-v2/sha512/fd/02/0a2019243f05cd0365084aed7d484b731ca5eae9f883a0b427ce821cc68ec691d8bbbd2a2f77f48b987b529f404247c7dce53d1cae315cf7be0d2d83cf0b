{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\GameList\\\\GameList.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { MetroSpinner } from 'react-spinners-kit';\nimport { GameListItem } from './GameListItem';\nimport { useStyles } from './styles';\nimport { getQueryString } from '../../utils/query-string';\nexport var GameList = function GameList(_ref) {\n  _s();\n\n  var gamesData = _ref.gamesData;\n  var styles = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var startLoading = function startLoading() {\n    return setLoading(true);\n  };\n\n  var stopLoading = function stopLoading() {\n    return setLoading(false);\n  };\n\n  var currentPage = 1;\n  useEffect(function () {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    return function () {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n    };\n  }, []);\n\n  var handleScroll = function handleScroll() {\n    var lastItemLoaded = document.querySelector('.game-list > .game-list__item:last-child');\n\n    if (lastItemLoaded) {\n      var lastItemLoadedOffset = lastItemLoaded.offsetTop + lastItemLoaded.clientHeight;\n      var pageOffset = window.pageYOffset + window.innerHeight;\n\n      if (pageOffset > lastItemLoadedOffset && !loading) {\n        if (gamesData.page < gamesData.maxPage) {\n          var nextPage = parseInt(gamesData.page, 10) + 1; // const settings = {\n          //   options: { page: nextPage },\n          // };\n          // const optionsQueryString = getQueryString(settings.options);\n\n          var queryString = \"\".concat(router.pathname, \"?page=\").concat(nextPage);\n          router.push(queryString);\n        }\n      }\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      return window.removeEventListener('scroll', handleScroll);\n    };\n  });\n\n  var renderGameList = function renderGameList() {\n    return gamesData.gamesData.results.map(function (gameListItem) {\n      return /*#__PURE__*/_jsxDEV(GameListItem, {\n        gameInfo: gameListItem\n      }, gameListItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, _this);\n    });\n  };\n\n  var renderSpinner = function renderSpinner() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-container\",\n      children: /*#__PURE__*/_jsxDEV(MetroSpinner, {\n        color: \"#83838A\",\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"\".concat(styles.root, \" game-list\"),\n      children: renderGameList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this), loading && renderSpinner()]\n  }, void 0, true);\n};\n\n_s(GameList, \"maKCPhWPV4RVhsP/9ZDoVit1oCA=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = GameList;\nGameList.propTypes = {\n  gamesData: PropTypes.object.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GameList\");","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/GameList/GameList.jsx"],"names":["React","useEffect","useRef","useState","Router","useRouter","PropTypes","MetroSpinner","GameListItem","useStyles","getQueryString","GameList","gamesData","styles","router","loading","setLoading","startLoading","stopLoading","currentPage","events","on","off","handleScroll","lastItemLoaded","document","querySelector","lastItemLoadedOffset","offsetTop","clientHeight","pageOffset","window","pageYOffset","innerHeight","page","maxPage","nextPage","parseInt","queryString","pathname","push","addEventListener","removeEventListener","renderGameList","results","map","gameListItem","id","renderSpinner","root","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport Router, { useRouter } from 'next/router';\r\nimport PropTypes from 'prop-types';\r\nimport { MetroSpinner } from 'react-spinners-kit';\r\n\r\nimport { GameListItem } from './GameListItem';\r\nimport { useStyles } from './styles';\r\nimport { getQueryString } from '../../utils/query-string';\r\n\r\nexport const GameList = ({ gamesData }) => {\r\n  const styles = useStyles();\r\n  const router = useRouter();\r\n  const [loading, setLoading] = useState(false);\r\n  const startLoading = () => setLoading(true);\r\n  const stopLoading = () => setLoading(false);\r\n  let currentPage = 1;\r\n\r\n  useEffect(() => {\r\n    Router.events.on('routeChangeStart', startLoading);\r\n    Router.events.on('routeChangeComplete', stopLoading);\r\n    return () => {\r\n      Router.events.off('routeChangeStart', startLoading);\r\n      Router.events.off('routeChangeComplete', stopLoading);\r\n    };\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    const lastItemLoaded = document.querySelector('.game-list > .game-list__item:last-child');\r\n\r\n    if (lastItemLoaded) {\r\n      const lastItemLoadedOffset = lastItemLoaded.offsetTop + lastItemLoaded.clientHeight;\r\n      const pageOffset = window.pageYOffset + window.innerHeight;\r\n\r\n      if (pageOffset > lastItemLoadedOffset && !loading) {\r\n        if (gamesData.page < gamesData.maxPage) {\r\n          const nextPage = parseInt(gamesData.page, 10) + 1;\r\n          // const settings = {\r\n          //   options: { page: nextPage },\r\n          // };\r\n          // const optionsQueryString = getQueryString(settings.options);\r\n          const queryString = `${router.pathname}?page=${nextPage}`;\r\n\r\n          router.push(queryString);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  });\r\n\r\n  const renderGameList = () => (\r\n    gamesData.gamesData.results.map((gameListItem) => (\r\n      <GameListItem\r\n        key={gameListItem.id}\r\n        gameInfo={gameListItem}\r\n      />\r\n    ))\r\n  );\r\n\r\n  const renderSpinner = () => (\r\n    <div className=\"spinner-container\">\r\n      <MetroSpinner color=\"#83838A\" size={60} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ul className={`${styles.root} game-list`}>\r\n        {renderGameList()}\r\n      </ul>\r\n      { loading && renderSpinner() }\r\n    </>\r\n  );\r\n};\r\n\r\nGameList.propTypes = {\r\n  gamesData: PropTypes.object.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}