{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\GameList\\\\GameList.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { MetroSpinner } from 'react-spinners-kit';\nimport { GameListItem } from './GameListItem';\nimport { useStyles } from './styles';\nimport { getQueryString } from '../../utils/query-string';\nexport var GameList = function GameList(_ref) {\n  _s();\n\n  var gamesData = _ref.gamesData;\n  var styles = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var startLoading = function startLoading() {\n    return setLoading(true);\n  };\n\n  var stopLoading = function stopLoading() {\n    return setLoading(false);\n  };\n\n  var currentPage = 1;\n  useEffect(function () {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    return function () {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n    };\n  }, []);\n\n  var handleScroll = function handleScroll() {\n    var lastItemLoaded = document.querySelector('.game-list > .game-list__item:last-child');\n\n    if (lastItemLoaded) {\n      var lastItemLoadedOffset = lastItemLoaded.offsetTop + lastItemLoaded.clientHeight;\n      var pageOffset = window.pageYOffset + window.innerHeight;\n\n      if (pageOffset > lastItemLoadedOffset && !loading) {\n        var nextPage = parseInt(gamesData.page, 10) + 1;\n        var settings = {\n          options: {\n            page: page\n          }\n        };\n        var optionsQueryString = getQueryString(settings.options);\n        var queryString = \"\".concat(router.pathname, \"?page=\").concat(nextPage);\n        router.push(queryString);\n      }\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      return window.removeEventListener('scroll', handleScroll);\n    };\n  });\n\n  var renderGameList = function renderGameList() {\n    return gamesData.results.map(function (gameListItem) {\n      return /*#__PURE__*/_jsxDEV(GameListItem, {\n        gameInfo: gameListItem\n      }, gameListItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"\".concat(styles.root, \" game-list\"),\n      children: renderGameList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), loading && /*#__PURE__*/_jsxDEV(MetroSpinner, {\n      color: \"#83838A\",\n      size: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(GameList, \"maKCPhWPV4RVhsP/9ZDoVit1oCA=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = GameList;\nGameList.propTypes = {\n  gamesData: PropTypes.object.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GameList\");","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/GameList/GameList.jsx"],"names":["React","useEffect","useRef","useState","Router","useRouter","PropTypes","MetroSpinner","GameListItem","useStyles","getQueryString","GameList","gamesData","styles","router","loading","setLoading","startLoading","stopLoading","currentPage","events","on","off","handleScroll","lastItemLoaded","document","querySelector","lastItemLoadedOffset","offsetTop","clientHeight","pageOffset","window","pageYOffset","innerHeight","nextPage","parseInt","page","settings","options","optionsQueryString","queryString","pathname","push","addEventListener","removeEventListener","renderGameList","results","map","gameListItem","id","root","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport Router, { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { MetroSpinner } from 'react-spinners-kit';\n\nimport { GameListItem } from './GameListItem';\nimport { useStyles } from './styles';\nimport { getQueryString } from '../../utils/query-string';\n\nexport const GameList = ({ gamesData }) => {\n  const styles = useStyles();\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  const startLoading = () => setLoading(true);\n  const stopLoading = () => setLoading(false);\n  let currentPage = 1;\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    const lastItemLoaded = document.querySelector('.game-list > .game-list__item:last-child');\n\n    if (lastItemLoaded) {\n      const lastItemLoadedOffset = lastItemLoaded.offsetTop + lastItemLoaded.clientHeight;\n      const pageOffset = window.pageYOffset + window.innerHeight;\n\n      if (pageOffset > lastItemLoadedOffset && !loading) {\n        const nextPage = parseInt(gamesData.page, 10) + 1;\n\n        const settings = {\n          options: { page },\n        };\n        const optionsQueryString = getQueryString(settings.options);\n        const queryString = `${router.pathname}?page=${nextPage}`;\n\n        router.push(queryString);\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  });\n\n  const renderGameList = () => (\n    gamesData.results.map((gameListItem) => (\n      <GameListItem\n        key={gameListItem.id}\n        gameInfo={gameListItem}\n      />\n    ))\n  );\n\n  return (\n    <>\n      <ul className={`${styles.root} game-list`}>\n        {renderGameList()}\n      </ul>\n      {\n        loading && <MetroSpinner color=\"#83838A\" size={60} />\n      }\n    </>\n  );\n};\nGameList.propTypes = {\n  gamesData: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}