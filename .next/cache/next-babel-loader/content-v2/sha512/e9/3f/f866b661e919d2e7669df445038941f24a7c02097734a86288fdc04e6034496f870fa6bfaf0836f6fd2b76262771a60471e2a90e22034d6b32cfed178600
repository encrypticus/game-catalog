{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MyProjects/game-catalog/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\Sorting\\\\Sorting.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nexport var Sorting = function Sorting() {\n  _s();\n\n  var _useState = useState(''),\n      releasedValue = _useState[0],\n      setReleasedValue = _useState[1];\n\n  var _useState2 = useState(''),\n      ratingValue = _useState2[0],\n      setRatingValue = _useState2[1];\n\n  var _useState3 = useState(''),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      _useSelector$gamesDat = _useSelector.gamesDataReducer,\n      options = _useSelector$gamesDat.options,\n      ordering = _useSelector$gamesDat.options.ordering;\n\n  useEffect(function () {\n    var orderBy = Object.values(ordering).filter(function (el) {\n      return el;\n    }).join(',');\n\n    if (orderBy) {\n      var settings = _objectSpread(_objectSpread({}, options), {}, {\n        ordering: orderBy\n      });\n\n      var optionsQueryString = getQueryString(settings);\n      var queryString = \"\".concat(router.pathname, \"?\").concat(optionsQueryString);\n      router.push(queryString);\n    }\n  }, [ordering]);\n\n  var handleChangeValue = function handleChangeValue(_ref) {\n    var value = _ref.target.value;\n    setValue(value);\n    dispatch(changeOptions(_objectSpread(_objectSpread({}, options), {}, {\n      ordering: value\n    })));\n  };\n\n  var changeReleasedValue = function changeReleasedValue(_ref2) {\n    var value = _ref2.target.value;\n    setReleasedValue(value);\n    dispatch(changeOptions(_objectSpread(_objectSpread({}, options), {}, {\n      ordering: _objectSpread(_objectSpread({}, ordering), {}, {\n        released: value\n      })\n    })));\n    dispatch(clearGamesData());\n    var sortBy = Object.values(ordering).join(','); //console.log(ordering);\n  };\n\n  var changeRatingValue = function changeRatingValue(_ref3) {\n    var value = _ref3.target.value;\n    setRatingValue(value);\n    dispatch(changeOptions(_objectSpread(_objectSpread({}, options), {}, {\n      ordering: _objectSpread(_objectSpread({}, ordering), {}, {\n        rating: value\n      })\n    })));\n    dispatch(clearGamesData());\n    var sortBy = Object.values(ordering).join(','); //console.log(ordering);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"sorting\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sorting__text\",\n      children: \"Sort By: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"sorting__select\",\n      value: ratingValue,\n      onChange: changeRatingValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"rating\",\n        children: \"rating desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"-rating\",\n        children: \"rating asc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"sorting__select\",\n      value: releasedValue,\n      onChange: changeReleasedValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"released\",\n        children: \"released desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"-released\",\n        children: \"released asc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Sorting, \"k0MoDnRSb4pvm6vv+7dPz4v99TY=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\n_c = Sorting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sorting\");","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/Sorting/Sorting.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useRouter","changeOptions","clearGamesData","getQueryString","Sorting","releasedValue","setReleasedValue","ratingValue","setRatingValue","value","setValue","dispatch","router","state","gamesDataReducer","options","ordering","orderBy","Object","values","filter","el","join","settings","optionsQueryString","queryString","pathname","push","handleChangeValue","target","changeReleasedValue","released","sortBy","changeRatingValue","rating"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\n\nexport const Sorting = () => {\n  const [releasedValue, setReleasedValue] = useState('');\n  const [ratingValue, setRatingValue] = useState('');\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { gamesDataReducer: { options, options: { ordering } } } = useSelector(state => state);\n\n  useEffect(() => {\n    const orderBy = Object.values(ordering).filter(el => el).join(',');\n    if (orderBy) {\n      const settings = { ...options, ordering: orderBy };\n      const optionsQueryString = getQueryString(settings);\n      const queryString = `${router.pathname}?${optionsQueryString}`;\n      router.push(queryString);\n    }\n  }, [ordering]);\n\n  const handleChangeValue = ({ target: { value } }) => {\n    setValue(value);\n    dispatch(changeOptions({ ...options, ordering: value }));\n  };\n\n  const changeReleasedValue = ({ target: { value } }) => {\n    setReleasedValue(value);\n\n    dispatch(changeOptions({\n      ...options,\n      ordering: {\n        ...ordering,\n        released: value,\n      }\n    }));\n\n    dispatch(clearGamesData());\n\n    const sortBy = Object.values(ordering).join(',');\n    //console.log(ordering);\n  };\n\n  const changeRatingValue = ({ target: { value } }) => {\n    setRatingValue(value);\n\n    dispatch(changeOptions({\n      ...options,\n      ordering: {\n        ...ordering,\n        rating: value,\n      }\n    }));\n\n    dispatch(clearGamesData());\n\n    const sortBy = Object.values(ordering).join(',');\n    //console.log(ordering);\n  };\n\n  return (\n    <form className=\"sorting\">\n      <span className=\"sorting__text\">Sort By: </span>\n      <select\n        className=\"sorting__select\"\n        value={ratingValue}\n        onChange={changeRatingValue}\n      >\n        <option value=\"rating\">\n          rating desc\n        </option>\n        <option value=\"-rating\">\n          rating asc\n        </option>\n      </select>\n\n      <select\n        className=\"sorting__select\"\n        value={releasedValue}\n        onChange={changeReleasedValue}\n      >\n        <option value=\"released\">\n          released desc\n        </option>\n        <option value=\"-released\">\n          released asc\n        </option>\n      </select>\n    </form>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}