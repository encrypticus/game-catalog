{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { useStyles } from './styles';\nexport var Search = function Search() {\n  var _useState = useState(''),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      _useSelector$gamesDat = _useSelector.gamesDataReducer,\n      options = _useSelector$gamesDat.options,\n      search = _useSelector$gamesDat.options.search;\n\n  var styles = useStyles();\n\n  var handleChangeQuery = function handleChangeQuery(_ref) {\n    var value = _ref.target.value;\n    setQuery(value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var optionsQueryString = getQueryString(options);\n    var queryString = \"\".concat(router.pathname, \"?\").concat(optionsQueryString);\n    router.push(queryString);\n    dispatch(clearGamesData());\n  };\n\n  useEffect(function () {\n    dispatch(changeOptions({\n      search: query.trim()\n    }));\n  }, [query]); // useEffect(() => {\n  //   if (query) {\n  //     const optionsQueryString = getQueryString(options);\n  //     const queryString = `${router.pathname}?${optionsQueryString}`;\n  //     router.push(queryString);\n  //   }\n  // }, [search]);\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsx(\"input\", {\n      className: styles.root,\n      value: query,\n      onChange: handleChangeQuery,\n      placeholder: \"Search...\"\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}