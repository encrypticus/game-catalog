{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\GameList\\\\GameListItem\\\\GameListItem.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useDispatch } from 'react-redux';\nimport { setScreenshots } from '../../../redux/reducers/games-data-reducer';\nimport { useStyles } from './styles';\nexport const GameListItem = ({\n  gameInfo\n}) => {\n  const {\n    name,\n    rating,\n    released,\n    background_image: bgImage,\n    slug,\n    short_screenshots\n  } = gameInfo;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const handleChangeScreenshots = () => {\n    dispatch(setScreenshots(short_screenshots.map(scr => scr.image)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `${styles.root} game-list__item`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: /*#__PURE__*/_jsxDEV(Link\n      /*as={`/game/${slug}`}*/\n      , {\n        href: {\n          pathname: '/game/[slug]',\n          query: {\n            slug,\n            screenshots: short_screenshots ? JSON.stringify(short_screenshots.map(scr => scr.image)) : []\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: handleChangeScreenshots,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.img,\n            src: bgImage,\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.info,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: styles.name,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.rating,\n              children: `rating: ${rating}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.released,\n              children: `released: ${released || 'unknown'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\nGameListItem.propTypes = {\n  gameInfo: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/GameList/GameListItem/GameListItem.jsx"],"names":["React","PropTypes","Link","useDispatch","setScreenshots","useStyles","GameListItem","gameInfo","name","rating","released","background_image","bgImage","slug","short_screenshots","dispatch","styles","handleChangeScreenshots","map","scr","image","root","wrapper","pathname","query","screenshots","JSON","stringify","img","info","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM;AACJC,IAAAA,IADI;AACEC,IAAAA,MADF;AACUC,IAAAA,QADV;AACoBC,IAAAA,gBAAgB,EAAEC,OADtC;AAC+CC,IAAAA,IAD/C;AACqDC,IAAAA;AADrD,MAEFP,QAFJ;AAGA,QAAMQ,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,MAAM,GAAGX,SAAS,EAAxB;;AAEA,QAAMY,uBAAuB,GAAG,MAAM;AACpCF,IAAAA,QAAQ,CAACX,cAAc,CAACU,iBAAiB,CAACI,GAAlB,CAAsBC,GAAG,IAAIA,GAAG,CAACC,KAAjC,CAAD,CAAf,CAAR;AACD,GAFD;;AAIA,sBACE;AAAI,IAAA,SAAS,EAAG,GAAEJ,MAAM,CAACK,IAAK,kBAA9B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACM,OAAvB;AAAA,6BACE,QAAC;AACC;AADF;AAEE,QAAA,IAAI,EAAE;AACNC,UAAAA,QAAQ,EAAE,cADJ;AAENC,UAAAA,KAAK,EAAE;AACLX,YAAAA,IADK;AAELY,YAAAA,WAAW,EAAEX,iBAAiB,GAAGY,IAAI,CAACC,SAAL,CAAeb,iBAAiB,CAACI,GAAlB,CAAsBC,GAAG,IAAIA,GAAG,CAACC,KAAjC,CAAf,CAAH,GAA6D;AAFtF;AAFD,SAFR;AAAA,+BASE;AAAG,UAAA,OAAO,EAAEH,uBAAZ;AAAA,kCACE;AAAK,YAAA,SAAS,EAAED,MAAM,CAACY,GAAvB;AAA4B,YAAA,GAAG,EAAEhB,OAAjC;AAA0C,YAAA,GAAG,EAAEJ;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAEQ,MAAM,CAACa,IAAvB;AAAA,oCACE;AAAI,cAAA,SAAS,EAAEb,MAAM,CAACR,IAAtB;AAAA,wBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAEQ,MAAM,CAACP,MAArB;AAAA,wBAA+B,WAAUA,MAAO;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAG,cAAA,SAAS,EAAEO,MAAM,CAACN,QAArB;AAAA,wBAAiC,aAAYA,QAAQ,IAAI,SAAU;AAAnE;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAnCM;AAqCPJ,YAAY,CAACwB,SAAb,GAAyB;AACvBvB,EAAAA,QAAQ,EAAEN,SAAS,CAAC8B,MAAV,CAAiBC;AADJ,CAAzB","sourcesContent":["import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { setScreenshots } from '../../../redux/reducers/games-data-reducer';\r\nimport { useStyles } from './styles';\r\n\r\nexport const GameListItem = ({ gameInfo }) => {\r\n  const {\r\n    name, rating, released, background_image: bgImage, slug, short_screenshots,\r\n  } = gameInfo;\r\n  const dispatch = useDispatch();\r\n  const styles = useStyles();\r\n\r\n  const handleChangeScreenshots = () => {\r\n    dispatch(setScreenshots(short_screenshots.map(scr => scr.image)));\r\n  };\r\n\r\n  return (\r\n    <li className={`${styles.root} game-list__item`}>\r\n      <div className={styles.wrapper}>\r\n        <Link\r\n          /*as={`/game/${slug}`}*/\r\n          href={{\r\n          pathname: '/game/[slug]',\r\n          query: {\r\n            slug,\r\n            screenshots: short_screenshots ? JSON.stringify(short_screenshots.map(scr => scr.image)) : [],\r\n          }\r\n        }}>\r\n          <a onClick={handleChangeScreenshots}>\r\n            <img className={styles.img} src={bgImage} alt={name} />\r\n            <div className={styles.info}>\r\n              <h2 className={styles.name}>{name}</h2>\r\n              <p className={styles.rating}>{`rating: ${rating}`}</p>\r\n              <p className={styles.released}>{`released: ${released || 'unknown'}`}</p>\r\n            </div>\r\n          </a>\r\n        </Link>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nGameListItem.propTypes = {\r\n  gameInfo: PropTypes.object.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}