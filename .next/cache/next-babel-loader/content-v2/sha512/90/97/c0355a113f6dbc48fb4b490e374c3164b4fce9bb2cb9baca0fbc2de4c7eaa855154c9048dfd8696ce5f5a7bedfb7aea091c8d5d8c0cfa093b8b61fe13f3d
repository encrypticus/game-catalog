{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  gamesData: {\n    count: '',\n    results: []\n  },\n  options: {},\n  query: ''\n};\nconst gamesReducer = createSlice({\n  name: 'gamesData',\n  initialState,\n  reducers: {\n    add(state, {\n      payload: {\n        count,\n        results\n      }\n    }) {\n      const {\n        gamesData: {\n          results: currentResults\n        }\n      } = state;\n      const filtered = currentResults.length ? results.filter((el, idx) => el.id !== currentResults[idx].id || {}) : results;\n      state.gamesData.count = count;\n      state.gamesData.results = [...currentResults, ...filtered];\n    },\n\n    clearGamesData(state) {\n      console.log(state);\n    },\n\n    changeOptions(state, action) {\n      console.log(action);\n    }\n\n  }\n});\nexport const {\n  reducer: gamesDataReducer,\n  actions: {\n    add,\n    clearGamesData,\n    changeOptions\n  }\n} = gamesReducer;","map":{"version":3,"sources":["D:/MyProjects/game-catalog/redux/reducers/games-data-reducer.js"],"names":["createSlice","initialState","gamesData","count","results","options","query","gamesReducer","name","reducers","add","state","payload","currentResults","filtered","length","filter","el","idx","id","clearGamesData","console","log","changeOptions","action","reducer","gamesDataReducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,OAAO,EAAE;AAFA,GADQ;AAKnBC,EAAAA,OAAO,EAAE,EALU;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;AASA,MAAMC,YAAY,GAAGP,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,WADyB;AAE/BP,EAAAA,YAF+B;AAG/BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,CAACC,KAAD,EAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAET,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAX,KAAR,EAAyC;AAC1C,YAAM;AAAEF,QAAAA,SAAS,EAAE;AAAEE,UAAAA,OAAO,EAAES;AAAX;AAAb,UAA6CF,KAAnD;AACA,YAAMG,QAAQ,GAAGD,cAAc,CAACE,MAAf,GAAwBX,OAAO,CAACY,MAAR,CAAe,CAACC,EAAD,EAAKC,GAAL,KAAaD,EAAE,CAACE,EAAH,KAAUN,cAAc,CAACK,GAAD,CAAd,CAAoBC,EAA9B,IAAoC,EAAhE,CAAxB,GAA8Ff,OAA/G;AACAO,MAAAA,KAAK,CAACT,SAAN,CAAgBC,KAAhB,GAAwBA,KAAxB;AACAQ,MAAAA,KAAK,CAACT,SAAN,CAAgBE,OAAhB,GAA0B,CAAC,GAAGS,cAAJ,EAAoB,GAAGC,QAAvB,CAA1B;AACD,KANO;;AAORM,IAAAA,cAAc,CAACT,KAAD,EAAQ;AACpBU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,KATO;;AAURY,IAAAA,aAAa,CAACZ,KAAD,EAAQa,MAAR,EAAgB;AAC3BH,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,OAAO,MAAM;AACXC,EAAAA,OAAO,EAAEC,gBADE;AAEXC,EAAAA,OAAO,EAAE;AACPjB,IAAAA,GADO;AAEPU,IAAAA,cAFO;AAGPG,IAAAA;AAHO;AAFE,IAOThB,YAPG","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  gamesData: {\n    count: '',\n    results: [],\n  },\n  options: {},\n  query: '',\n};\n\nconst gamesReducer = createSlice({\n  name: 'gamesData',\n  initialState,\n  reducers: {\n    add(state, { payload: { count, results } }) {\n      const { gamesData: { results: currentResults } } = state;\n      const filtered = currentResults.length ? results.filter((el, idx) => el.id !== currentResults[idx].id || {}) : results;\n      state.gamesData.count = count;\n      state.gamesData.results = [...currentResults, ...filtered];\n    },\n    clearGamesData(state) {\n      console.log(state);\n    },\n    changeOptions(state, action) {\n      console.log(action);\n    }\n  },\n});\n\nexport const {\n  reducer: gamesDataReducer,\n  actions: {\n    add,\n    clearGamesData,\n    changeOptions,\n  }\n} = gamesReducer;\n"]},"metadata":{},"sourceType":"module"}