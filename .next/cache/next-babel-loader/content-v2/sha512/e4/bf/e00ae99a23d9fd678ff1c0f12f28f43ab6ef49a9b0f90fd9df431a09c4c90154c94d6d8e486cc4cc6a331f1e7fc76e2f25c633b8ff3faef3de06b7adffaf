{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\pages\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { GameList } from '../components/GameList';\nimport { PageHead } from '../components/Head';\nimport { Header } from '../components/Header';\nimport { Sorting } from '../components/Sorting';\nimport { Filtering } from '../components/Filtering'; // import styles from '../styles/Home.module.css';\n\nexport default function Home({\n  gamesData\n}) {\n  useEffect(() => {\n    try {\n      console.log(gamesData);\n    } catch ({\n      message\n    }) {\n      console.log(message);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(PageHead, {\n      title: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Sorting, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filtering, {\n          platforms: gamesData.platforms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameList, {\n          gamesData: gamesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\nHome.propTypes = {\n  gamesData: PropTypes.object.isRequired\n};\nexport async function getServerSideProps({\n  query\n}) {\n  const {\n    page = 1,\n    search = ''\n  } = query;\n  let gamesData = null;\n\n  try {\n    const response = await fetch(`${process.env.URL}/api/games`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(_objectSpread(_objectSpread({}, query), {}, {\n        page,\n        search\n      }))\n    });\n    gamesData = await response.json();\n  } catch ({\n    message\n  }) {\n    gamesData = {\n      error: {\n        message\n      }\n    };\n  }\n\n  return {\n    props: {\n      gamesData\n    }\n  };\n}","map":{"version":3,"sources":["D:/MyProjects/game-catalog/pages/index.js"],"names":["useEffect","PropTypes","GameList","PageHead","Header","Sorting","Filtering","Home","gamesData","console","log","message","platforms","propTypes","object","isRequired","getServerSideProps","query","page","search","response","fetch","process","env","URL","method","headers","body","JSON","stringify","json","error","props"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B,C,CACA;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA6B;AAE1CR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFS,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACD,KAFD,CAEE,OAAO;AAAEG,MAAAA;AAAF,KAAP,EAAoB;AACpBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEH,SAAS,CAACI;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,QAAD;AAAU,UAAA,SAAS,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;AAEDD,IAAI,CAACM,SAAL,GAAiB;AACfL,EAAAA,SAAS,EAAEP,SAAS,CAACa,MAAV,CAAiBC;AADb,CAAjB;AAIA,OAAO,eAAeC,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA6C;AAClD,QAAM;AAAEC,IAAAA,IAAI,GAAG,CAAT;AAAYC,IAAAA,MAAM,GAAG;AAArB,MAA4BF,KAAlC;AACA,MAAIT,SAAS,GAAG,IAAhB;;AACA,MAAI;AACF,UAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,GAAI,YAApB,EAAiC;AAC3DC,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkD;AAK3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,iCAAoBZ,KAApB;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA;AAAjC;AALqD,KAAjC,CAA5B;AAOAX,IAAAA,SAAS,GAAG,MAAMY,QAAQ,CAACU,IAAT,EAAlB;AACD,GATD,CASE,OAAO;AAAEnB,IAAAA;AAAF,GAAP,EAAoB;AACpBH,IAAAA,SAAS,GAAG;AAAEuB,MAAAA,KAAK,EAAE;AAAEpB,QAAAA;AAAF;AAAT,KAAZ;AACD;;AACD,SAAO;AAAEqB,IAAAA,KAAK,EAAE;AAAExB,MAAAA;AAAF;AAAT,GAAP;AACD","sourcesContent":["import { useEffect } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { GameList } from '../components/GameList';\r\nimport { PageHead } from '../components/Head';\r\nimport { Header } from '../components/Header';\r\nimport { Sorting } from '../components/Sorting';\r\nimport { Filtering } from '../components/Filtering';\r\n// import styles from '../styles/Home.module.css';\r\n\r\nexport default function Home({ gamesData }) {\r\n\r\n  useEffect(() => {\r\n    try {\r\n      console.log(gamesData);\r\n    } catch ({ message }) {\r\n      console.log(message);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <PageHead title=\"Главная\" />\r\n      <Header />\r\n      <main>\r\n        <div className=\"container\">\r\n          <Sorting />\r\n          <Filtering platforms={gamesData.platforms} />\r\n          <GameList gamesData={gamesData} />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  gamesData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n  const { page = 1, search = '' } = query;\r\n  let gamesData = null;\r\n  try {\r\n    const response = await fetch(`${process.env.URL}/api/games`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ ...query, page, search }),\r\n    });\r\n    gamesData = await response.json();\r\n  } catch ({ message }) {\r\n    gamesData = { error: { message } };\r\n  }\r\n  return { props: { gamesData } };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}