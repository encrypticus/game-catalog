{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\Search\\\\Search.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { useStyles } from './styles';\nexport var Search = function Search() {\n  _s();\n\n  var _useState = useState(''),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      _useSelector$gamesDat = _useSelector.gamesDataReducer,\n      options = _useSelector$gamesDat.options,\n      search = _useSelector$gamesDat.options.search;\n\n  var styles = useStyles();\n\n  var handleChangeQuery = function handleChangeQuery(_ref) {\n    var value = _ref.target.value;\n    setQuery(value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var optionsQueryString = getQueryString(options);\n    var queryString = \"\".concat(router.pathname, \"?\").concat(optionsQueryString);\n    router.push(queryString);\n    dispatch(clearGamesData());\n  };\n\n  useEffect(function () {\n    dispatch(changeOptions({\n      search: query.trim()\n    }));\n  }, [query]); // useEffect(() => {\n  //   if (query) {\n  //     const optionsQueryString = getQueryString(options);\n  //     const queryString = `${router.pathname}?${optionsQueryString}`;\n  //     router.push(queryString);\n  //   }\n  // }, [search]);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.root,\n      value: query,\n      onChange: handleChangeQuery,\n      placeholder: \"Search...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Search, \"S2hofe1WFBG190mgePM7UaoL+Y0=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/Search/Search.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","useRouter","changeOptions","clearGamesData","getQueryString","useStyles","Search","query","setQuery","dispatch","router","state","gamesDataReducer","options","search","styles","handleChangeQuery","value","target","handleSubmit","event","preventDefault","optionsQueryString","queryString","pathname","push","trim","form","root"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,yCAA9C;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,kBACAT,QAAQ,CAAC,EAAD,CADR;AAAA,MACnBU,KADmB;AAAA,MACZC,QADY;;AAE1B,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,MAAM,GAAGT,SAAS,EAAxB;;AAH0B,qBAIqCF,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAAN,CAJhD;AAAA,2CAIlBC,gBAJkB;AAAA,MAIEC,OAJF,yBAIEA,OAJF;AAAA,MAIsBC,MAJtB,yBAIWD,OAJX,CAIsBC,MAJtB;;AAK1B,MAAMC,MAAM,GAAGV,SAAS,EAAxB;;AAEA,MAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,OAA2B;AAAA,QAAdC,KAAc,QAAxBC,MAAwB,CAAdD,KAAc;AACnDT,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACD,GAFD;;AAIA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACE,QAAMC,kBAAkB,GAAGlB,cAAc,CAACS,OAAD,CAAzC;AACA,QAAMU,WAAW,aAAMb,MAAM,CAACc,QAAb,cAAyBF,kBAAzB,CAAjB;AACAZ,IAAAA,MAAM,CAACe,IAAP,CAAYF,WAAZ;AACAd,IAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AACH,GAND;;AAQAP,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,QAAQ,CAACP,aAAa,CAAC;AAAEY,MAAAA,MAAM,EAAEP,KAAK,CAACmB,IAAN;AAAV,KAAD,CAAd,CAAR;AACD,GAFQ,EAEN,CAACnB,KAAD,CAFM,CAAT,CAnB0B,CAuB1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AACE,IAAA,SAAS,EAAEQ,MAAM,CAACY,IADpB;AAEE,IAAA,QAAQ,EAAER,YAFZ;AAAA,2BAIE;AACE,MAAA,SAAS,EAAEJ,MAAM,CAACa,IADpB;AAEE,MAAA,KAAK,EAAErB,KAFT;AAGE,MAAA,QAAQ,EAAES,iBAHZ;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,WADF;AAaD,CA5CM;;GAAMV,M;UAEMR,W,EACFG,S,EACgDF,W,EAChDM,S;;;KALJC,M","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\n\nimport { changeOptions, clearGamesData } from '../../redux/reducers/games-data-reducer';\nimport { getQueryString } from '../../utils/query-string';\nimport { useStyles } from './styles';\n\nexport const Search = () => {\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { gamesDataReducer: { options, options: { search } } } = useSelector(state => state);\n  const styles = useStyles();\n\n  const handleChangeQuery = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n      const optionsQueryString = getQueryString(options);\n      const queryString = `${router.pathname}?${optionsQueryString}`;\n      router.push(queryString);\n      dispatch(clearGamesData());\n  };\n\n  useEffect(() => {\n    dispatch(changeOptions({ search: query.trim() }));\n  }, [query]);\n\n  // useEffect(() => {\n  //   if (query) {\n  //     const optionsQueryString = getQueryString(options);\n  //     const queryString = `${router.pathname}?${optionsQueryString}`;\n  //     router.push(queryString);\n  //   }\n  // }, [search]);\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={handleSubmit}\n    >\n      <input\n        className={styles.root}\n        value={query}\n        onChange={handleChangeQuery}\n        placeholder=\"Search...\"\n      />\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}