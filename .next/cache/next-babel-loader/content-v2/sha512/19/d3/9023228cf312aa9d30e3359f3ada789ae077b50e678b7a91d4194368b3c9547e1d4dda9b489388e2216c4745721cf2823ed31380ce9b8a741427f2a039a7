{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyProjects\\\\game-catalog\\\\components\\\\GameList\\\\GameList.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Router, { useRouter } from 'next/router';\nimport { MetroSpinner } from 'react-spinners-kit';\nimport { GameListItem } from './GameListItem';\nimport { useStyles } from './styles';\nexport const GameList = ({\n  gameList\n}) => {\n  const styles = useStyles();\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const startLoading = () => setLoading(true);\n\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(loading);\n  }, [loading]);\n\n  const renderGameList = () => gameList.map(gameListItem => {\n    return /*#__PURE__*/_jsxDEV(GameListItem, {\n      gameInfo: gameListItem\n    }, gameListItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.root,\n      children: renderGameList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(MetroSpinner, {\n      color: \"#83838A\",\n      size: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\nGameList.propTypes = {\n  gameList: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["D:/MyProjects/game-catalog/components/GameList/GameList.jsx"],"names":["React","useEffect","useRef","useState","PropTypes","Router","useRouter","MetroSpinner","GameListItem","useStyles","GameList","gameList","styles","router","loading","setLoading","startLoading","stopLoading","events","on","off","console","log","renderGameList","map","gameListItem","id","root","propTypes","array","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACxC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMa,YAAY,GAAG,MAAMD,UAAU,CAAC,IAAD,CAArC;;AACA,QAAME,WAAW,GAAG,MAAMF,UAAU,CAAC,KAAD,CAApC;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACa,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCH,YAArC;AACAX,IAAAA,MAAM,CAACa,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,WAAxC;AACA,WAAO,MAAM;AACXZ,MAAAA,MAAM,CAACa,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCJ,YAAtC;AACAX,MAAAA,MAAM,CAACa,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,WAAzC;AACD,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMS,cAAc,GAAG,MACrBZ,QAAQ,CAACa,GAAT,CAAcC,YAAD,IAAkB;AAC7B,wBACE,QAAC,YAAD;AAEE,MAAA,QAAQ,EAAEA;AAFZ,OACOA,YAAY,CAACC,EADpB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD,CADF;;AAWA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEd,MAAM,CAACe,IAAtB;AAAA,gBACGJ,cAAc;AADjB;AAAA;AAAA;AAAA;AAAA,YADF,EAKIT,OAAO,iBAAI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC,SAApB;AAA8B,MAAA,IAAI,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA,YALf;AAAA,kBADF;AAUD,CAzCM;AA0CPJ,QAAQ,CAACkB,SAAT,GAAqB;AACnBjB,EAAAA,QAAQ,EAAEP,SAAS,CAACyB,KAAV,CAAgBC;AADP,CAArB","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport Router, { useRouter } from 'next/router';\nimport { MetroSpinner } from 'react-spinners-kit';\n\nimport { GameListItem } from './GameListItem';\nimport { useStyles } from './styles';\n\nexport const GameList = ({ gameList }) => {\n  const styles = useStyles();\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  const startLoading = () => setLoading(true);\n  const stopLoading = () => setLoading(false);\n\n  useEffect(() => {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    return () => {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log(loading);\n  }, [loading]);\n\n  const renderGameList = () => (\n    gameList.map((gameListItem) => {\n      return (\n        <GameListItem\n          key={gameListItem.id}\n          gameInfo={gameListItem}\n        />\n      );\n    })\n  );\n\n  return (\n    <>\n      <ul className={styles.root}>\n        {renderGameList()}\n      </ul>\n      {\n        loading && <MetroSpinner color=\"#83838A\" size={60} />\n      }\n    </>\n  );\n};\nGameList.propTypes = {\n  gameList: PropTypes.array.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}