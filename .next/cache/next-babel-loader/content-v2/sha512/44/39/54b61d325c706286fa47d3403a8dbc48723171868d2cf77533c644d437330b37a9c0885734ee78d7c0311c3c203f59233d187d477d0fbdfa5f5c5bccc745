{"ast":null,"code":"import _defineProperty from \"D:/MyProjects/game-catalog/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:/MyProjects/game-catalog/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  gamesData: {\n    count: '',\n    results: []\n  },\n  options: {},\n  query: ''\n};\nvar gamesReducer = createSlice({\n  name: 'gamesData',\n  initialState: initialState,\n  reducers: {\n    add: function add(state, _ref) {\n      var _ref$payload = _ref.payload,\n          count = _ref$payload.count,\n          results = _ref$payload.results;\n      var currentResults = state.gamesData.results;\n      var filtered = results.filter(function (el) {\n        return currentResults.every(function (cur) {\n          return el.id !== cur.id;\n        });\n      });\n      state.gamesData.count = count;\n      state.gamesData.results = [].concat(_toConsumableArray(currentResults), _toConsumableArray(filtered));\n    },\n    clearGamesData: function clearGamesData(state) {\n      state.gamesData = {\n        count: 0,\n        results: []\n      };\n    },\n    changeOptions: function changeOptions(state, _ref2) {\n      var payload = _ref2.payload;\n      state.options = _objectSpread(_objectSpread({}, state.options), payload);\n    }\n  }\n});\nvar gamesDataReducer = gamesReducer.reducer,\n    _gamesReducer$actions = gamesReducer.actions,\n    add = _gamesReducer$actions.add,\n    clearGamesData = _gamesReducer$actions.clearGamesData,\n    changeOptions = _gamesReducer$actions.changeOptions;\nexport { gamesDataReducer, add, clearGamesData, changeOptions };","map":{"version":3,"sources":["D:/MyProjects/game-catalog/redux/reducers/games-data-reducer.js"],"names":["createSlice","initialState","gamesData","count","results","options","query","gamesReducer","name","reducers","add","state","payload","currentResults","filtered","filter","el","every","cur","id","clearGamesData","changeOptions","gamesDataReducer","reducer","actions"],"mappings":";;;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,OAAO,EAAE;AAFA,GADQ;AAKnBC,EAAAA,OAAO,EAAE,EALU;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;AASA,IAAMC,YAAY,GAAGP,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,WADyB;AAE/BP,EAAAA,YAAY,EAAZA,YAF+B;AAG/BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GADQ,eACJC,KADI,QACoC;AAAA,8BAA/BC,OAA+B;AAAA,UAApBT,KAAoB,gBAApBA,KAAoB;AAAA,UAAbC,OAAa,gBAAbA,OAAa;AAAA,UACZS,cADY,GACSF,KADT,CAClCT,SADkC,CACrBE,OADqB;AAE1C,UAAMU,QAAQ,GAAGV,OAAO,CAACW,MAAR,CAAe,UAAAC,EAAE;AAAA,eAAIH,cAAc,CAACI,KAAf,CAAqB,UAAAC,GAAG;AAAA,iBAAIF,EAAE,CAACG,EAAH,KAAUD,GAAG,CAACC,EAAlB;AAAA,SAAxB,CAAJ;AAAA,OAAjB,CAAjB;AACAR,MAAAA,KAAK,CAACT,SAAN,CAAgBC,KAAhB,GAAwBA,KAAxB;AACAQ,MAAAA,KAAK,CAACT,SAAN,CAAgBE,OAAhB,gCAA8BS,cAA9B,sBAAiDC,QAAjD;AACD,KANO;AAORM,IAAAA,cAPQ,0BAOOT,KAPP,EAOc;AACpBA,MAAAA,KAAK,CAACT,SAAN,GAAkB;AAChBC,QAAAA,KAAK,EAAE,CADS;AAEhBC,QAAAA,OAAO,EAAE;AAFO,OAAlB;AAID,KAZO;AAaRiB,IAAAA,aAbQ,yBAaMV,KAbN,SAa0B;AAAA,UAAXC,OAAW,SAAXA,OAAW;AAChCD,MAAAA,KAAK,CAACN,OAAN,mCAAqBM,KAAK,CAACN,OAA3B,GAAuCO,OAAvC;AACD;AAfO;AAHqB,CAAD,CAAhC;IAuBWU,gB,GAMPf,Y,CANFgB,O;4BAMEhB,Y,CALFiB,O;IACEd,G,yBAAAA,G;IACAU,c,yBAAAA,c;IACAC,a,yBAAAA,a","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  gamesData: {\n    count: '',\n    results: [],\n  },\n  options: {},\n  query: '',\n};\n\nconst gamesReducer = createSlice({\n  name: 'gamesData',\n  initialState,\n  reducers: {\n    add(state, { payload: { count, results } }) {\n      const { gamesData: { results: currentResults } } = state;\n      const filtered = results.filter(el => currentResults.every(cur => el.id !== cur.id));\n      state.gamesData.count = count;\n      state.gamesData.results = [...currentResults, ...filtered];\n    },\n    clearGamesData(state) {\n      state.gamesData = {\n        count: 0,\n        results: [],\n      };\n    },\n    changeOptions(state, { payload }) {\n      state.options = { ...state.options, ...payload };\n    }\n  },\n});\n\nexport const {\n  reducer: gamesDataReducer,\n  actions: {\n    add,\n    clearGamesData,\n    changeOptions,\n  }\n} = gamesReducer;\n"]},"metadata":{},"sourceType":"module"}